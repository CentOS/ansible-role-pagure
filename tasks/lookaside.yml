---
- block:
    - name: make the lookaside cache directory
      file:
        path: "{{ lookaside_rootpath }}/lookaside"
        state: directory
        owner: apache
        group: apache
        mode: 0775
        setype: git_user_content_t

    - name: Ensuring that scponly is installed for specific shell
      yum:
        name: rssh
        state: installed

    - name: Ensuring some protocols are allowed through rssh
      blockinfile:
        path: /etc/rssh.conf
        block: |
          allowscp
          allowsftp
          allowrsync

    - name: Default umask for rssh push
      lineinfile:
        path: /etc/rssh.conf
        regexp: '^umask =' 
        line: 'umask = 002'
        state: present

    - name: Adding specific RCM user and restricted shell
      user: 
        name: '{{ item.login_name }}' 
        state: present 
        comment: "{{ item.full_name }}"
        groups: rsshusers, apache
        append: True
        shell: /bin/rssh
      with_items: "{{ lookaside_ssh_users }}"
      when: lookaside_ssh_users is defined
      loop_control:
        label: '{{ item.login_name }}'

     
    - name: Importing local users ssh pub keys
      authorized_key: 
        user: '{{ item.0.login_name }}' 
        key: "{{ item.1 }}"
      with_subelements: 
        - '{{ lookaside_ssh_users }}'
        - ssh_pub_key
      when: lookaside_ssh_users is defined
      loop_control:
        label: '{{ item.0.login_name }}'

    - name: Ensuring specific RCM user can push to lookaside
      acl:
        entity: "{{ item.login_name }}"
        etype: user
        path: "{{ lookaside_rootpath }}/lookaside"
        permissions: rwx
        recursive: yes
        state: present
      with_items: "{{ lookaside_ssh_users }}"  
      loop_control:
        label: '{{ item.login_name }}'

 
    - name: Ensuring RCM user will be granted rights on new created repositories
      acl:
        default: yes
        entity:  "{{ item.login_name }}"
        etype: user
        path: "{{ lookaside_rootpath }}/lookaside"
        permissions: rwx
        recursive: yes
        state: present
      with_items: "{{ lookaside_ssh_users }}"
      loop_control:
        label: '{{ item.login_name }}'


    - name: Ensuring apache group can push to lookaside
      acl:
        entity: apache
        etype: group
        path: "{{ lookaside_rootpath }}/lookaside"
        permissions: rwx
        recursive: yes
        state: present

    - name: Ensuring apache group will be granted rights on new created repositories
      acl:
        default: yes
        entity:  apache
        etype: group
        path: "{{ lookaside_rootpath }}/lookaside"
        permissions: rwx
        recursive: yes
        state: present

    - name: install the upload.cgi script
      copy:
        src: "{{ ansible_distribution_major_version }}/upload.cgi"
        dest: "/var/www/cgi-bin/upload.cgi"
        mode: 0755
        setype: "git_script_exec_t"
      when: not lookaside_fasjson

    - block:
        - name: Installing required pkg for kerberos/gssapi
          yum:
            name: "{{ python_request_gssapi_pkg }}"
            state: installed

        - name: "[workaround] Ensuring keyring instead of KCM for kerberos"
          yum:
            name: sssd-kcm
            state: absent
          notify: restart_httpd  
            
        - name: Install FASJSON lookaside upload.cgi script
          copy:
            src: "{{ ansible_distribution_major_version }}/upload.cgi.fasjson"
            dest: "/var/www/cgi-bin/upload.cgi"
            mode: 0755
            setype: "git_script_exec_t"

        - name: Distributing needed keytab
          copy:
            src: "{{ pkistore }}/krb5/{{ lookaside_fasjson_keytab }}"
            dest: "/etc/httpd/conf.d/{{ lookaside_fasjson_keytab }}"
            mode: '0400'
            owner: apache
            group: apache
            setype: "git_script_exec_t"

        - name: Install FASJSON SIG lookaside upload.cgi script
          copy:
            src: "{{ ansible_distribution_major_version }}/upload_sig.cgi"
            dest: "/var/www/cgi-bin/upload_sig.cgi"
            mode: 0755
            setype: "git_script_exec_t"

      when: lookaside_fasjson


    - name: install the lookaside configuration file 
      template:
        src: "lookaside.cfg.j2"
        dest: "/etc/lookaside.cfg"
        mode: 0644

    - name: Ensuring inotify tools are installed
      yum:
        name: inotify-tools
        state: installed

    - name: Ensuring that we can recursively watch lookaside dir
      sysctl:
        name: fs.inotify.max_user_watches
        value: "{{ sysctl_fs_inotify_max_user_watches }}"

    - name: Inotify script to reset perms
      template:
        src: pagure-lookaside-watcher.j2
        dest: /usr/libexec/pagure-lookaside-watcher
        mode: 0750
        owner: root

    - name: lookaside systemd unit files
      template:
        src: "{{ item }}.j2"
        dest: "/etc/systemd/system/{{ item }}"
      with_items:
        - pagure-lookaside-watcher.service
      register: lookaside_systemd

    - name: Reloading systemd if needed
      shell: /usr/bin/systemctl daemon-reload
      when: lookaside_systemd is changed

    - name: Ensuring lookaside service is enabled and started
      service:
        name: "{{ item }}"
        state: started
        enabled: True
      with_items:
        - pagure-lookaside-watcher
  tags:
    - lookaside
