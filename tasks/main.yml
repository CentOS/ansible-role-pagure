---
- name: Importing specific distro variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  tags:
    - vars

- name: Adding our pagure repo 
  template:
    src: CentOS-pagure.repo.j2
    dest: /etc/yum.repos.d/CentOS-pagure.repo
  tags:
    - yum

- name: Ensuring we use PowerTools repo on 8-stream
  ini_file:
    path: /etc/yum.repos.d/CentOS-Stream-PowerTools.repo
    section: powertools
    option: enabled
    value: '1'
  tags:
    - dnf
  when: ansible_distribution_major_version == '8'  

- name: Installing required pkgs for pagure
  yum:
    name: "{{ pagure_pkgs }}" 
    state: latest
  notify:
   - restart_pagure_workers
    
- include_tasks: mysql.yml
  tags: 
    - mysql
- include_tasks: httpd.yml
  tags:
    - httpd
    - tls

- include_tasks: lookaside.yml
  tags:
    - lookaside

- include_tasks: gitolite.yml
  tags:
    - gitolite
- import_tasks: selinux.yml

- include_tasks: repospanner.yml
  when: pagure_repospanner_cluster  

- include_role:
    name: postfix
    tasks_from: relay_to

- name: Ensuring directory structure is there for git repositories
  file:
    state: directory
    owner: git
    group: git
    path: "{{ pagure_git_rootpath }}/repositories/{{ item }}"
    setype: gitosis_var_lib_t
  with_items:
    - docs
    - forks
    - tickets
    - requests
    - remotes

- name: Ensuring specific namespaces exist in pagure
  file:
    state: directory
    owner: git
    group: git
    path: "{{ pagure_git_rootpath }}/repositories/{{ item }}"
    setype: gitosis_var_lib_t
  with_items: "{{ pagure_namespaces }}"

- name: Ensuring directory structure is there for attachments
  file:
    state: directory
    owner: git
    group: git
    path: "{{ pagure_git_rootpath }}/{{ item }}"
    setype: gitosis_var_lib_t
  with_items:
    - attachments
    - archives

- name: Ensuring httpd can read git repositories
  acl:
    entity: apache
    etype: user
    path: "{{ pagure_git_rootpath }}"
    permissions: rx
    #recursive: yes
    state: present

- name: Ensuring httpd user will be granted rights on new created repositories
  acl:
    default: yes
    entity: apache
    etype: user
    path: "{{ pagure_git_rootpath }}"
    permissions: rx
    #recursive: yes
    state: present

- name: Configuring pagure application
  template:
    src: "{{ item }}.j2"
    dest: "/etc/pagure/{{ item }}"
    owner: git 
    backup: True
    mode: 0644
  with_items:
    - pagure.cfg
    - alembic.ini
  notify:
   - restart_pagure_workers
  tags:
    - config

- name: Running alembic upgrade for existing install
  command: alembic --config /etc/pagure/alembic.ini upgrade head
  args:
    removes: /etc/pagure/initdb.done

- name: Init pagure DB
  shell: "{{ pagure_initdb_cmd }}"

- name: Deploying pagure CentOS theme
  unarchive:
    src: "{{ pagure_centos_theme_file }}"
    dest: /
  tags:
    - theme

- include_tasks: mqtt.yml
  when: pagure_mqtt

- name: Ensuring some services are started and enabled
  service:
    name: "{{ item }}"
    state: started
    enabled: True
  with_items:
    - httpd
    - redis
    - pagure_ev
    - pagure_gitolite_worker
    - pagure_worker
    - pagure_loadjson
    - pagure_logcom
    
- include_tasks: repospanner-hook.yml
  when: pagure_repospanner_cluster  

- include_tasks: pagure-patches.yml
  when: pagure_patches

- include_tasks: monitoring.yml
  tags:
    - monitoring

- name: Script for pagure groups to be created
  template:
    src: pagure-create-groups.j2
    dest: /usr/libexec/pagure-create-groups
    owner: root
    mode: 0750
  register: pagure_groups  
  tags:
    - groups

- name: Ensuring we have correct groups
  shell: /usr/libexec/pagure-create-groups
  when: pagure_groups is changed
  tags:
    - groups
